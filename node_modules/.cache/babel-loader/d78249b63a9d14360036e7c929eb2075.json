{"ast":null,"code":"var _jsxFileName = \"/Users/laurenparkos/Sites/springtime/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\"; // Bootstrap Components\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomForm = props => {\n  _s();\n\n  // Values of form\n  const [values, setValues] = useState({\n    projectName: '',\n    projectOwner: ''\n  });\n  const [newCustState, setCustState] = useState(false); // Handler for inputs\n\n  const handleProjectName = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      projectName: event.target.value\n    }));\n  };\n\n  const handleProjectOwner = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      projectOwner: event.target.value\n    }));\n  };\n\n  const handleNewUser = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      projectOwner: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Project Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: values.projectName,\n          onChange: handleProjectName,\n          placeholder: \"What's the project name?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          value: values.projectOwner,\n          onChange: handleProjectOwner,\n          placeholder: \"What's your name?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: handleNewUser,\n          children: values.projectOwner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), newCustState ? /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: values.projectOwner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomForm, \"bWt0PUtcVAqJWUZKtivZPxDfacc=\");\n\n_c = CustomForm;\nexport default CustomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"sources":["/Users/laurenparkos/Sites/springtime/src/components/Form/Form.js"],"names":["Component","useState","Container","Row","Col","Form","Button","InputGroup","DropdownButton","Dropdown","FormControl","CustomForm","props","values","setValues","projectName","projectOwner","newCustState","setCustState","handleProjectName","event","persist","target","value","handleProjectOwner","handleNewUser"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC;AACjCc,IAAAA,WAAW,EAAE,EADoB;AAEjCC,IAAAA,YAAY,EAAE;AAFmB,GAAD,CAApC;AAKA,QAAM,CAACC,YAAD,EAAeC,YAAf,IAA+BjB,QAAQ,CAAC,KAAD,CAA7C,CAR0B,CAU1B;;AACA,QAAMkB,iBAAiB,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,OAAN;AACAP,IAAAA,SAAS,CAAED,MAAD,KAAa,EACnB,GAAGA,MADgB;AAEnBE,MAAAA,WAAW,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAFP,KAAb,CAAD,CAAT;AAIH,GAND;;AAQA,QAAMC,kBAAkB,GAAIJ,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,OAAN;AACAP,IAAAA,SAAS,CAAED,MAAD,KAAa,EACnB,GAAGA,MADgB;AAEnBG,MAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAFR,KAAb,CAAD,CAAT;AAIH,GAND;;AAQA,QAAME,aAAa,GAAIL,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,OAAN;AACAP,IAAAA,SAAS,CAAED,MAAD,KAAa,EACnB,GAAGA,MADgB;AAEnBG,MAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAFR,KAAb,CAAD,CAAT;AAIH,GAND;;AAQA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,KAAK,EAAEV,MAAM,CAACE,WADlB;AAEI,UAAA,QAAQ,EAAEI,iBAFd;AAGI,UAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,UAAD;AAAA,gCACI,QAAC,WAAD;AACI,UAAA,KAAK,EAAEN,MAAM,CAACG,YADlB;AAEI,UAAA,QAAQ,EAAEQ,kBAFd;AAGI,UAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,QAAD,CAAU,IAAV;AAAe,UAAA,OAAO,EAAEC,aAAxB;AAAA,oBAAwCZ,MAAM,CAACG;AAA/C;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAmBKC,YAAY,gBACb,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,KAAK,EAAEJ,MAAM,CAACG;AADlB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,GAOX,IA1BN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAnED;;GAAML,U;;KAAAA,U;AAoEN,eAAeA,UAAf","sourcesContent":["import { Component, useState } from \"react\";\n\n// Bootstrap Components\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst CustomForm = (props) => {\n\n    // Values of form\n    const [values, setValues] = useState({\n        projectName: '',\n        projectOwner: '',\n    });\n\n    const [newCustState, setCustState] = useState(false);\n\n    // Handler for inputs\n    const handleProjectName = (event) => {\n        event.persist();\n        setValues((values) => ({\n            ...values,\n            projectName: event.target.value,\n        }));\n    };\n\n    const handleProjectOwner = (event) => {\n        event.persist();\n        setValues((values) => ({\n            ...values,\n            projectOwner: event.target.value,\n        }));\n    };\n\n    const handleNewUser = (event) => {\n        event.persist();\n        setValues((values) => ({\n            ...values,\n            projectOwner: event.target.value,\n        }));\n    };\n\n    return (\n        <div>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Project Name</Form.Label>\n                    <Form.Control \n                        value={values.projectName} \n                        onChange={handleProjectName}\n                        placeholder=\"What's the project name?\" \n                    />\n                </Form.Group>\n\n                <InputGroup>\n                    <FormControl\n                        value={values.projectOwner} \n                        onChange={handleProjectOwner}\n                        placeholder=\"What's your name?\"\n                    />\n                    <Dropdown.Item onClick={handleNewUser}>{values.projectOwner}</Dropdown.Item>\n                </InputGroup>\n\n                {newCustState ? \n                <Form.Group>\n                    <Form.Label>New Customer</Form.Label>\n                    <Form.Control \n                        value={values.projectOwner} \n                    />\n                </Form.Group>\n                : null}\n            </Form>\n        </div>\n    );\n};\nexport default CustomForm;"]},"metadata":{},"sourceType":"module"}